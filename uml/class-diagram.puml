@startuml クラス図
title クラス図

abstract class BalloonStateBase{
  balloonContext:BalloonContextInterface
  abstract onBeginBalloonState():void
  abstract onEndBalloonState():void
  abstract onStamp():void
  abstract update(dt):void;
}
class BalloonStatePreparing extends BalloonStateBase{

}
class BalloonStateReady extends BalloonStateBase{

}
class BalloonStatePopping extends BalloonStateBase{

}
class BalloonStateAway extends BalloonStateBase{

}


interface BalloonContextInterface{

}



class Location{

}

class Foot{
  location:Location
  update(dt:number):void
  onCodeDown(code:string):void
  onCodeUp(code:string):void
}

class Balloon implements BalloonContextInterface{
  location:Location
  progress:number
  balloonState:BalloonStateBase

  update(dt:number)
}

class Field{
  locationList:Location[]
  footList:Foot[]
  balloonList:Baloon[]

  update(dt:number):void
}


abstract class SceneStateBase{
  sceneContext:SceneContextInterface

  constructor(sceneContext:SceneContextInterface)
  abstract onCodeDown(code:string):void
  abstract onCodeUp(code:string):void
  abstract onBeginSceneState():void
  abstract onEndSceneState():void
}

class SceneStateTitle extends SceneStateBase{
}
class SceneStatePlaying extends SceneStateBase{
  field:Field
  gameTime:number
  score:number
  --
}
class SceneStateResult extends SceneStateBase{
  score:number
  --
}


interface SceneContextInterface{
  --
  setNextSceneState(nextSeneState:SceneStateBase):void
  submitScore(score:number,name:string)
}

class App implements SceneContextInterface{
  dataStore:DataStore
  --
  onKeyDown(event:KeyboardEvent):void
  onKeyUp(event:KeyboardEvent):void
}


SceneStateBase o-up- SceneContextInterface
App o-right- SceneStateBase

SceneStatePlaying *-- Field


Field *-- "3" Foot
Field *-- "3" Location
Field o-- "0..n" Balloon


Foot o-- Location
Balloon o-- Location


BalloonStateBase o-up- BalloonContextInterface
Balloon o-right- BalloonStateBase

@enduml