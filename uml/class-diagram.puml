@startuml クラス図
title クラス図

interface PlayerScoreInterface{
  name:string
  score:number
}

interface AddScoreListenerInterface{
  addScore(score:number):void
}
interface KeyEventListenerInterface{
  onCodeDown(code:string):void
  onCodeUp(code:string):void
}

abstract class BalloonStateBase{
  balloonContext:BalloonContextInterface
  abstract onBeginBalloonState():void
  abstract onEndBalloonState():void
  abstract onStamp():void
  abstract update(dt:number):void
}
class BalloonStatePreparing extends BalloonStateBase{

}
class BalloonStateReady extends BalloonStateBase{

}
class BalloonStatePopping extends BalloonStateBase{

}
class BalloonStateAway extends BalloonStateBase{

}


interface BalloonContextInterface extends AddScoreListenerInterface{
  setNextBalloonState(nextBalloonState?:BalloonStateBase):void
  addDebugModifier(modifier:string):void
  removeDebugModifier(modifier:string):void
  startPreparingAnimation():void
  startReadyAnimation():void
  startAwayAnimation():void
  startPoppingAnimation():void
}



class ObjectLocation implements AddScoreListenerInterface,KeyEventListenerInterface{
  foot:Foot
  balloon:Balloon
  debugObjectLocation:HTMLElement
  addScoreListener:AddScoreListenerInterface
  objectLocationGroup:THREE.Group
  constructor({foot,balloon,debugObjectLocation,addScoreListener}:ObjectLocationParams)
  destroy():void
  onStamp():void
  update(dt:number:number):void
}

class Foot implements KeyEventListenerInterface{
  objectLocation:ObjectLocation|null
  targetCode:string
  footState:FootState
  debugFoot:HTMLElement
  footMesh:THREE.Mesh
  constructor(targetCode:string,originalFootMesh:THREE.Mesh)
  destroy():void
  setObjectLocation(objectLocation:ObjectLocation|null):void
  update(dt:number):void
}


class Balloon implements BalloonContextInterface{
  objectLocation:ObjectLocation
  currentBalloonState:BalloonStateBase|null
  debugBalloon:HTMLElement
  baseGroup:THREE.Group
  balloonMesh:THREE.Mesh
  starMeshList:THREE.Mesh[]

  constructor(originalBalloonMesh:THREE.Mesh,originalStarMesh:THREE.Mesh)
  destroy():void
  setObjectLocation(objectLocation:ObjectLocation|null):void
  update(dt:number):void
  onStamp():void
}

abstract class PlayingStateBase{
  playingContext:PlayingContextInterface

  constructor(playingContext:PlayingContextInterface)
  abstract onBeginPlayingState():void
  abstract onEndPlayingState():void
  abstract update(dt:number):void
  abstract isInAction():boolean
}

class PlayingStateCountdown extends PlayingStateBase{

}
class PlayingStateAction extends PlayingStateBase{

}

class PlayingStateTimeover extends PlayingStateBase{

}

interface PlayingContextInterface{
  updateCountdownTime(dt:number):boolean
  updateGameTime(dt:number):boolean
  updateTimeoutTime(dt:number):boolean
  setNextPlayingState(nextPlayingState:PlayingStateBase):void
  goNextScene():void
  showGo():void
  showTimeover():void
}

abstract class SceneStateBase extends KeyEventListenerInterface{
  sceneContext:SceneContextInterface
  game2DSceneElement:HTMLDivElement

  constructor(sceneContext:SceneContextInterface)
  abstract onBeginSceneState():void
  abstract onEndSceneState():void
  abstract update(dt:number):void
  abstract onCodeDown(code:string):void
  abstract onCodeUp(code:string):void
}

class SceneStateTitle extends SceneStateBase{
}
class SceneStatePlaying extends SceneStateBase implements PlayingContextInterface,AddScoreListenerInterface{
  currentPlayingState:SceneStateBase
  countdownTime:number
  gameTime:number
  timeoutTime:number
  score:number
  objectLocationList:ObjectLocation[3]
  --
}
class SceneStateResult extends SceneStateBase{
  score:number
  --
  constructor(sceneContext:SceneContextInterface,score:number)
}


interface SceneContextInterface{
  --
  setNextSceneState(nextSceneState:SceneStateBase|null):void
  getDebugViewElement():HTMLDivElement
  getGame2DViewElement():HTMLDivElement
  getThreeScene():THREE.Scene
  getViewSize():Size
  submitPlayerScore(playerScore:PlayerScoreInterface):void
  getPlayerScoreList():PlayerScoreInterface[]
  getOriginalStarMesh():THREE.Mesh
  getOriginalFootMesh():THREE.Mesh
  getOriginalBalloonMesh():THREE.Mesh
  startTitleAnimation():void;
  stopTitleAnimation():void;
}

class App implements SceneContextInterface{
  dataStore:DataStore
  --
  loadMeshAsync():Promise<void>
  setupFirebase():void
  onKeyDown(event:KeyboardEvent):void
  onKeyUp(event:KeyboardEvent):void
  setupStats():void
  setupUI():void
  setupThree():void
  setupEvents():void
  update(dt:number):void
  onResize():void
  toggleDebug():void
  toggleUI():void
  toggleFullscreen():void
}

interface ElementSizeObserverParams {
  elementForSize: HTMLElement
  onResize?: SimpleCallback
}
interface Size {
  width: number
  height: number
}

class ElementSizeObserver{
  previousSize: Size | null
  elementForSize: HTMLElement
  onResize: SimpleCallback | undefined
  constructor({ elementForSize, onResize }: ElementSizeObserverParams)
  getSize(): Size
  update():void

}

SceneStateBase o-up- SceneContextInterface
App o-right- SceneStateBase

SceneStatePlaying *-- "3" ObjectLocation
ObjectLocation *-- Foot
ObjectLocation *-- Balloon


BalloonStateBase o-up- BalloonContextInterface
Balloon o-right- BalloonStateBase


PlayingStateBase o-up- PlayingContextInterface
SceneStatePlaying o-left- PlayingStateBase

@enduml